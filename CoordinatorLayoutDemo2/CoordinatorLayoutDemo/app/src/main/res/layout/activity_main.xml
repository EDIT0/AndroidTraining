<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context=".MainActivity">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:fitsSystemWindows="true">
        <!--
        fitsSystemWindows는 뷰가 차지하는 영역을 Statusbar영역을 제외한 영역까지 확장해주는 역할
        다시 말해 Statusbar가 툴바를 가리는 것을 방지해준다.
        -->

        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:background="@color/white"
            android:fitsSystemWindows="true"
            app:contentScrim="#FFEB3B"
            app:layout_scrollFlags="scroll|exitUntilCollapsed|snap"
            app:title="테스트 타이틀 테스트 타이틀 테스트 타이틀"
            app:toolbarId="@id/toolbar">

            <!--
            MaterialToolbar에서 layout_scrollFlags 속성이 옮겨짐
            -->

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:src="@drawable/apple"
                android:scaleType="centerCrop"
                android:fitsSystemWindows="true"
                app:layout_collapseMode="parallax"/>

            <com.google.android.material.appbar.MaterialToolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:menu="@menu/actionbar_menu">
                <!--
                scroll: 스크롤 이벤트에 반응할 모든 view에 설정
                enterAlways: 아래쪽 방향으로 스크롤 할 때 마다 보여짐
                enterAlwaysCollapsed: 스크롤뷰가 맨 위에 위치할 때 보여짐
                exitUntilCollapsed: 뷰의 minHeight가 정의되어 있을 경우, 뷰가 해당 크기까지만 축소됨
                snap: 뷰의 일부만 스크롤 되었을 때 가까운 쪽으로 자동 스크롤됨
                -->

                <!--
                1번 프로젝트랑 다르게 scrollFlags 속성이 제거되고(CollapsingToolbarLayout으로 옮김) layout_collapseMode를 추가해준다.
                layout_collapseMode는 pin인데 이 속성이 적용된 뷰는 스크롤이 되어 뭉개질 때에도 유지된다.
                -->

            </com.google.android.material.appbar.MaterialToolbar>

        </com.google.android.material.appbar.CollapsingToolbarLayout>

        <!-- 필요하다면 이곳에 탭바 넣기-->

    </com.google.android.material.appbar.AppBarLayout>

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior" />
    <!--
    layout_behavior 속성을 이용하여 앱바와 연결해주어야 한다.
    연결된 리사이클러뷰가 스크롤되면, 앱바가 layout_scrollFlags 속성에 따라 동작한다.
    -->


    <com.google.android.material.bottomappbar.BottomAppBar
        android:id="@+id/bottomBar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom"
        app:backgroundTint="#8BC34A"
        app:contentInsetEnd="0dp"
        app:contentInsetStart="0dp"
        app:fabAlignmentMode="center">

        <com.google.android.material.bottomnavigation.BottomNavigationView
            android:id="@+id/bottomNavigation"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:backgroundTint="@android:color/transparent"
            app:elevation="0dp"
            app:itemIconTint="@android:color/white"
            app:itemRippleColor="@android:color/white"
            app:itemTextColor="@android:color/white"
            app:labelVisibilityMode="labeled"
            app:menu="@menu/bottom_navi_menu" />

    </com.google.android.material.bottomappbar.BottomAppBar>

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fab"
        android:src="@drawable/ic_baseline_search_24"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:backgroundTint="#FF5722"
        app:layout_anchor="@id/bottomBar" />

</androidx.coordinatorlayout.widget.CoordinatorLayout>